plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom' version "0.12-SNAPSHOT" apply true
}

base {
    archivesName = "${mod_name}-fabric-${minecraft_version}"
}

repositories {
    maven {
        name 'jamies'
        url 'https://maven.jamieswhiteshirt.com/libs-release'
    }
    maven {
        name 'ladysnake'
        url 'https://maven.ladysnake.org/releases'
    }
    maven {
        name 'jitpack'
        url 'https://jitpack.io'
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "rinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    // ccr
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases" }
    maven {
        name "SquidDev"
        url "https://squiddev.cc/maven"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.2"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-world:5.2.2"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:5.2.2"
    include(modImplementation "com.jamieswhiteshirt:reach-entity-attributes:2.3.0")
    modImplementation "curse.maven:pehkui-319596:4684391"
    modImplementation 'com.github.Virtuoel:KanosConfig:0.4.1'

    modCompileOnly "maven.modrinth:lithium:mc1.20.1-0.11.2"
    modCompileOnly "curse.maven:distant-horizons-508933:5649758"

    // cc:tweaked - cc:restitched died :>
    modImplementation "curse.maven:cc-tweaked-282001:5644985"

    compileOnly project(":Common")
}

loom {
    if (project(":Common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":Common").file("src/main/resources/${mod_id}.accesswidener"))
    }

    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
//            from project(":Common").sourceSets.main.resources
//            source sourceSets.main
//            source project(":Common").sourceSets.main
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
//            from project(":Common").sourceSets.main.resources
//            source sourceSets.main
//            source project(":Common").sourceSets.main
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":Common").sourceSets.main.allSource)
}
processResources {
    from project(":Common").sourceSets.main.resources
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
